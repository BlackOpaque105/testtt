---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import TripPreview from '../../components/TripPreview.astro';
import { sortItemsByDateDesc } from '../../utils/data-utils';

export async function getStaticPaths() {
    const trips = (await getCollection('trips'));
    const tripCount = trips.length;
    return trips.map((trip, index) => ({
        params: { slug: trip.slug },
        props: {
            trip,
            prevtrip: index + 1 !== tripCount ? trips[index + 1] : null,
            nexttrip: index !== 0 ? trips[index - 1] : null
        }
    }));
}

type Props = { trip: CollectionEntry<'trips'>; prevtrip: CollectionEntry<'trips'>; nexttrip: CollectionEntry<'trips'> };

const { trip, prevtrip, nexttrip } = Astro.props;
const { title, description, seo } = trip.data;
const { Content } = await trip.render();
---

<BaseLayout title={seo?.title ?? title} description={seo?.description ?? description} image={seo?.image} pageType="article" showHeader={false}>
    <article class="mb-16 sm:mb-24">
        <header class="mb-8">
            <h1 class="text-3xl leading-tight font-serif font-medium sm:text-5xl sm:leading-tight">{title}</h1>
        </header>
        <div class="max-w-none prose prose-dante sm:prose-lg">
            <Content />
        </div>
    </article>
    {
        (prevtrip || nexttrip) && (
            <div class="my-16 sm:my-24">
                <h2 class="mb-12 text-xl font-serif italic sm:mb-16 sm:text-2xl">View Next</h2>
                {nexttrip && <TripPreview trip={nexttrip} class="mb-10 sm:mb-12" headingLevel="h3" />}
                {prevtrip && <TripPreview trip={prevtrip} class="mb-10 sm:mb-12" headingLevel="h3" />}
            </div>
        )
    }
</BaseLayout>
